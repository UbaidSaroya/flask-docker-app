# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Building and Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploying:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Docker BUILD 2
      run: |
        echo "${{secrets.DOCKER_TOKEN}}" | docker login --username "${{secrets.DOCKER_USERNAME}}" --password-stdin
        docker build -t "${{ secrets.DOCKER_USERNAME }}/flask-html:latest" .
        docker push "${{ secrets.DOCKER_USERNAME }}/flask-html:latest"
    - name: SSH to EC2 and Deploy
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SERVER_USERNAME_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "${{secrets.DOCKER_TOKEN}}" | docker login --username "${{secrets.DOCKER_USERNAME}}" --password-stdin
          docker stop $(docker ps -aq -f "name=flask-html")
          docker rm -f $(docker ps -aq -f "name=flask-html")
          docker rmi $(docker images -q -f "reference=${{ secrets.DOCKER_USERNAME }}/flask-html:latest")
          docker run -t -d -p 80:5000 --name flask-html "${{ secrets.DOCKER_USERNAME }}/flask-html:latest"
    # - name: Deploying on AWS
    #   run: |
    #     echo "${{secrets.SSH_KEY}}" > flask-html-app-key.pem
    #     chmod 400 "flask-html-app-key.pem"
    #     ls -l
    #     ssh -i "flask-html-app-key.pem" ubuntu@${{secrets.SERVER_USERNAME_IP}}
    #     echo "${{secrets.DOCKER_TOKEN}}" | docker login --username "${{secrets.DOCKER_USERNAME}}" --password-stdin
    #     docker run -t -d -p 80:5000 "${{ secrets.DOCKER_USERNAME }}/flask-html:latest"
